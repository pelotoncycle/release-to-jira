name: Release to JIRA
description: A GitHub action to automatically create releases on JIRA.
author: ulasozguler
branding:
  icon: 'edit'
  color: 'blue'
inputs:
  jira_server:
    description: JIRA server
    required: true
  jira_project:
    description: JIRA project
    required: true
  jira_user:
    description: JIRA user
    required: true
  jira_token:
    description: JIRA user token
    required: true
  jira_release_prefix:
    description: A string to apply to the beginning of the github_ref when creating the release on Jira
    required: false
    
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Install GH CLI
      shell: bash
      run: |
        if ! command -v gh &> /dev/null
        then
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
            && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && sudo apt update \
            && sudo apt install gh -y
        fi

    - name: Update release name
      shell: bash
      run: |
        GH_REF=${{ github.ref_name }}
        if [[ "${{ inputs.jira_release_prefix }}" ]]; then
          PREFIX="${{ inputs.jira_release_prefix }}"
        else
          PREFIX=""
        fi
        echo "RELEASE_NAME=${PREFIX}${GH_REF}" >> $GITHUB_ENV
        
    - name: Get or create Github release
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api \
          --method GET /repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} \
          --jq .body > notes.md \
        || \
        gh api \
          --method POST /repos/${{ github.repository }}/releases \
            -f tag_name='${{ github.ref_name }}' \
            -f name='${{ github.ref_name }}' \
            -F generate_release_notes=true \
          --jq .body > notes.md
          
    - name: Update JIRA
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        INPUT_JIRA_SERVER: ${{ inputs.jira_server }}
        INPUT_JIRA_PROJECT: ${{ inputs.jira_project }}
        INPUT_JIRA_USER: ${{ inputs.jira_user }}
        INPUT_JIRA_TOKEN: ${{ inputs.jira_token }}
      run: python ./src/main.py
